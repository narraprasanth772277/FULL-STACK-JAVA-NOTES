student table
=============
drop table student;
create table student(sno number(3),sname varchar2(10),sadd varchar2(12));
insert into student values(101,'raja','hyd');
insert into student values(102,'ravi','delhi');
insert into student values(103,'ramana','vizag');
commit;



Steps to develop First JDBC application to select the records from student table
using Eclipse IDE
================================================================================

step1:
-------
	Launch Eclipse IDE by choosing workspace location.

step2:
-------
	Create a java project i.e IH-JAVA-025 inside eclipse IDE.
	ex:
		File --> new --> project --> java project --> Next 
		Name : IH-JAVA-025 --> Next --> Finish.
step3:
-----
	Add "ojdbc14.jar" file in project build path.
	ex:
		right click to IH-JAVA-025 project --> build path -->
		configuration build path --> libraries --> Add external jars
		--> select ojdbc14.jar file --> open --> ok.

step4:
------
	Create a "com.ihub.www" package inside "src" folder.
	ex:
		right click to src folder --> new --> package -->
		Name : com.ihub.www --> finish.

step5:
------
	Create "SelectApp.java" file inside "src/com.ihub.www" package.
	ex:
		right click to com.ihub.www pkg --> new --> class -->
		Name : SelectApp  --> finish.

SelectApp.java
-------------
package com.ihub.www;

//ctrl+shift+o
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class SelectApp 
{
	public static void main(String[] args)throws Exception  
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		ResultSet rs=st.executeQuery("select * from student");
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
		}
		rs.close();
		st.close();
		con.close();
		
	}
}

step6:
------
	Run the jdbc application.
	ex:
		Right click to SelectApp.java file --> run as --> java application.

Q)Write a jdbc application to select student record based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Scanner;

public class SelectApp2 {

	public static void main(String[] args)throws Exception 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student number :");
		int no=sc.nextInt();
		
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		String qry="select * from student where sno="+no;
		ResultSet rs=st.executeQuery(qry);
		
		int cnt=0;
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
			cnt=1;
		}
		
		if(cnt==0)
			System.out.println("No rows selected");
		
		rs.close();
		st.close();
		con.close();
		
	}

}


Non-Select Queries
===================

Q)Write a JDBC application to insert a record into student table?


package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class InsertApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		System.out.println("Enter the student name :");
		String name=sc.next();
		System.out.println("Enter the student address :");
		String add=sc.next();
		
		//converting inputs according to SQL query
		name="'"+name+"'";
		add="'"+add+"'";
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="insert into student values("+no+","+name+","+add+")";
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record inserted");
		else
			System.out.println(result+" Record inserted");
		
		st.close();
		con.close();
		
	}
}


Q)Write a JDBC application to update student name based on student number?


package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class UpdateApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		System.out.println("Enter the student name :");
		String name=sc.next();
		
		//converting inputs according to SQL query
		name="'"+name+"'";
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="update student set sname="+name+" where sno="+no;
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No record updated");
		else
			System.out.println(result+" record updated");
		
		st.close();
		con.close();
	}
}

Q)Write a jdbc application to delete student record based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class DeleteApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="delete from student where sno="+no;
		
		int result=st.executeUpdate(qry);
		if(result==0)
			System.out.println("No record deleted");
		else
			System.out.println(result+" record deleted");
		
		st.close();
		con.close();
	}
}


Type1 JDBC Driver Architecture / JDBC-ODBC Bridge Driver (Partly Java Driver)
==============================================================================
Type1 JDBC driver is not designed to interact with database software directly.

It is designed to take the support of ODBC driver and Vendor DB library to locate and interact with database software.

Diagram: jdbc3.1

Advantages:

> It is a built-in driver of JDK.

> Using type1 jdbc driver we can interact with any database software.

Disadvantages:

> This driver performance is low.It is not suitable for medium and large scale projects.Hence     it is not a industry standard drive.

> To work with Type1 JDBC driver we need to arrange ODBC drivers and vendor db libraries.

> Since ODBC driver and Vendor db library present at client side. So it is not suitable for 
 untrusted applets to database communication.

Type2 JDBC Driver Architecture / Native API (partly java driver)
=================================================================
Type2 JDBC driver is not designed to interact with database software directly.

It is designed to take the support of vendor db library to locate and interact with database software.

Diagram: jdbc3.2

Advantages:

> This driver will give better performance when compare to Type1 jdbc driver.

> Type2 jdbc driver will not take the support ODBC driver.

Disadvantages:

> This driver performance is quit slow.It is not suitable for medium and large scale 
  projects.Hence it is not a industry standard driver.

> To work with type2 jdbc driver we need to arrange Vendor db library seperately.

> Since vendor db library present at client side so it is not suitable to perform 
  untrusted applets to database communication.

> For every database software we need to arrange type2 jdbc driver.



























































































































